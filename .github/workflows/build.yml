name: 'Build'

on:
  push:
    branches:
      - 'main'
    tags:
      - "*"

jobs:
  build_duckdb:
    name: 'Build DuckDB'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - duckdb_version: 'v1.2.2'
            duckdb_platform: 'linux_arm64'
            cc: 'aarch64-linux-gnu-gcc'
            cxx: 'aarch64-linux-gnu-g++'
            vcpkg_target_triplet: 'arm64-linux'
          - duckdb_version: 'v1.2.2'
            duckdb_platform: 'linux_amd64'
            cc: 'gcc'
            cxx: 'g++'
            vcpkg_target_triplet: 'x64-linux'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
      - name: 'Checkout Extension CI tools'
        uses: actions/checkout@v4
        with:
          repository: 'duckdb/extension-ci-tools'
          ref: 'main'
          fetch-depth: 0
          path: 'extension-ci-tools'
      - name: 'Checkout DuckDB'
        uses: actions/checkout@v4
        with:
          repository: 'duckdb/duckdb'
          ref: ${{ matrix.duckdb_version }}
          fetch-depth: 0
          path: 'duckdb'
      - name: 'Build Builder Docker image'
        shell: bash
        run: |
          docker build \
            --build-arg 'vcpkg_url=https://github.com/microsoft/vcpkg.git' \
            --build-arg 'vcpkg_commit=5e5d0e1cd7785623065e77eff011afdeec1a3574' \
            --build-arg 'extra_toolchains=;python3;' \
            -t duckdb_builder \
            ./extension-ci-tools/docker/${{ matrix.duckdb_platform }}
      - name: 'Generate timestamp for Ccache entry'
        shell: cmake -P {0}
        id: ccache_timestamp
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
          message("::set-output name=timestamp::${current_date}")
      - name: 'Create Ccache directory'
        run: |
          mkdir ccache_dir
      - name: Load Ccache
        uses: actions/cache@v4
        with:
          path: ./ccache_dir
          key: ccache-extension-distribution-${{ matrix.duckdb_platform }}-${{ steps.ccache_timestamp.outputs.timestamp }}
          restore-keys: |
            ccache-extension-distribution-${{ matrix.duckdb_platform }}-
      - name: 'Build DuckDB'
        run: |
          docker run                                                             \
          -v./ccache_dir:/ccache_dir                                             \
          -v./duckdb:/duckdb                                                     \
          -v./extension_config.cmake:/extension_config.cmake:ro                  \
          -e CC=${{ matrix.cc }}                                                 \
          -e CXX=${{ matrix.cxx }}                                               \
          -e CMAKE_BUILD_PARALLEL_LEVEL=2                                        \
          -e EXTENSION_CONFIGS='/extension_config.cmake'                         \
          -e ENABLE_EXTENSION_AUTOLOADING=1                                      \
          -e ENABLE_EXTENSION_AUTOINSTALL=1                                      \
          -e DUCKDB_PLATFORM=${{ matrix.duckdb_platform }}                       \
          -e VCPKG_TARGET_TRIPLET=${{ matrix.vcpkg_target_triplet }}             \
          -e USE_MERGED_VCPKG_MANIFEST=1                                         \
          -e LINUX_CI_IN_DOCKER=1                                                \
          duckdb_builder                                                         \
          bash -c "git config --global --add safe.directory /duckdb && make -C /duckdb extension_configuration && make -C /duckdb bundle-library"
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: 'libduckdb_bundle-${{ matrix.duckdb_version }}-${{ matrix.duckdb_platform }}'
          path: './duckdb/build/release/libduckdb_bundle.a'

  release:
    if: github.ref_type == 'tag'
    name: 'Release'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: build_duckdb
    steps:
      - name: 'Download Artifacts'
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: 'Rename Artifacts'
        working-directory: artifacts
        run: |
          mv libduckdb_bundle-v1.2.2-linux_arm64/libduckdb_bundle.a libduckdb_bundle-v1.2.2-linux_arm64.a
          mv libduckdb_bundle-v1.2.2-linux_amd64/libduckdb_bundle.a libduckdb_bundle-v1.2.2-linux_amd64.a
      - name: 'Release'
        uses: softprops/action-gh-release@v2
        with:
          files: 'artifacts/*.a'
          make_latest: true