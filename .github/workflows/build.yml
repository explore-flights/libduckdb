name: 'Build'

on:
  push:
    branches:
      - 'main'
    tags:
      - "*"

jobs:
  build_duckdb:
    # https://github.com/duckdb/duckdb/blob/1a9dc44fc96725e03a258270bfe397460d882917/.github/workflows/BundleStaticLibs.yml#L163
    strategy:
      matrix:
        include:
          - runner: ubuntu-latest
            arch: amd64
            image: x86_64
            vcpkg_target_triplet: arm64-linux
          - runner: ubuntu-24.04-arm
            arch: arm64
            image: aarch64
            vcpkg_target_triplet: x64-linux
    name: 'Build Static DuckDB Library (${{ matrix.arch }})'
    runs-on: ${{ matrix.runner }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
      - name: 'Checkout DuckDB'
        uses: actions/checkout@v4
        with:
          repository: 'duckdb/duckdb'
          ref: 'v1.2.2'
          fetch-depth: 0
          path: 'duckdb'
      - name: Build
        run: |
          export PWD=`pwd`
          docker run                                                                                                   \
          -v$PWD:$PWD                                                                                                  \
          -e CMAKE_BUILD_PARALLEL_LEVEL=2                                                                              \
          -e EXTENSION_CONFIGS="$PWD/extension_config.cmake"                                                           \
          -e ENABLE_EXTENSION_AUTOLOADING=1                                                                            \
          -e ENABLE_EXTENSION_AUTOINSTALL=1                                                                            \
          -e BUILD_BENCHMARK=1                                                                                         \
          -e FORCE_WARN_UNUSED=1                                                                                       \
          -e "OPENSSL_ROOT_DIR=$PWD/duckdb/build/release/vcpkg_installed/${{ matrix.vcpkg_target_triplet }}"           \
          -e "OPENSSL_DIR=$PWD/duckdb/build/release/vcpkg_installed/${{ matrix.vcpkg_target_triplet }}"                \
          -e "OPENSSL_USE_STATIC_LIBS=true"                                                                            \
          quay.io/pypa/manylinux_2_28_${{ matrix.image }}                                                              \
          bash -c "yum install -y perl-IPC-Cmd && git config --global --add safe.directory $PWD/duckdb && make gather-libs -C $PWD/duckdb"

      - name: 'Print platform'
        run: ./duckdb/build/release/duckdb -c "PRAGMA platform;"

      - name: 'Bundle'
        working-directory: duckdb
        run: |
          python3 scripts/amalgamation.py
          zip -r -j static-libs-linux-${{ matrix.arch }}.zip src/include/duckdb.h build/release/libs/

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: 'duckdb-static-libs-linux-${{ matrix.arch }}'
          path: 'duckdb/static-libs-linux-${{ matrix.arch }}.zip'

  release:
    if: github.ref_type == 'tag'
    name: 'Release'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: build_duckdb
    steps:
      - name: 'Download Artifacts'
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: 'Release'
        uses: softprops/action-gh-release@v2
        with:
          files: 'artifacts/**/*.zip'
          make_latest: true